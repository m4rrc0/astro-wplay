---
// import { protectEmail } from 'protect-email';
// import Mailto from './Mailto.svelte'
// import { destructureEmail } from '@utils'

const {
  email,
  target = '_blank',
  rel = 'noopener noreferrer',
  referrerpolicy = 'no-referrer',
} = Astro.props || {}
// const emailEncoded = email && protectEmail(email);
// const mailtoEncoded = email && protectEmail(`mailto:${email}`);
const [pre, post] = email.split('@')
const preHalf = Math.ceil(pre.length / 2)
const pre1 = pre.substr(0, preHalf)
const pre2 = pre.substr(preHalf)
const postHalf = Math.ceil(post.length / 2)
const post1 = post.substr(0, postHalf)
const post2 = post.substr(postHalf)

// const hasSlot = Astro.slots.has('default')

// <Mailto client:visible em={destructureEmail(email)} {target} {rel} {referrerpolicy} />
// <Fragment set:html={`<a href="${mailtoEncoded}">${emailEncoded}</a>`} />
// onclick="window.location.href = 'mailto:' + this.dataset.name + '@' + this.dataset.domain + '.' + this.dataset.tld; return false;"
---

<script type="module" src={(await import('./mt-obf.js?url')).default}></script>

<a
  is="mt-obf"
  href="/email-error/"
  {target}
  {rel}
  {referrerpolicy}
  data-mtobf="true"
  style={`--mtobf-pre1: "${pre1}"; --mtobf-pre2: "${pre2}"; --mtobf-post1: "${post1}"; --mtobf-post2: "${post2}";`}
></a>

<style is:global>
  a[data-mtobf='true']:after {
    content: '[adresse masqu√©e]';
    content: var(--mtobf-pre1) var(--mtobf-pre2) '@' var(--mtobf-post1) var(--mtobf-post2);
  }
</style>
