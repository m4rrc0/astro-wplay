---
  import Debug from 'astro/debug';
  import { createPath } from '@utils';
  import { directus, start as startDirectus, fetchLanguages, fetchOrganizations, fetchEvents, fetchArticles } from '../services/directus.js'
  import { SkeletonLayout, BasicPageLayout, OrganizationPageLayout, EventPageLayout, ArticlePageLayout } from '@layouts'


export async function getStaticPaths() {
  await startDirectus()

	// const pages = await fetchPages()
  const languages = await fetchLanguages()
	const organizations = await fetchOrganizations()
	const events = await fetchEvents()
	const articles = await fetchArticles()

  let staticPaths = []

  // TODO: account for multiple languages! (lang is hardcoded to 'fr' for the moment)
  languages.forEach(lang => {
    // const pagesStaticPaths = await pages.data.map(page => {
    //   // const path = page.path === 'index' ? undefined : page.path
    //   return { params: { path }, props: { page, pages } }
    // })
    const organizationsStaticPaths = organizations.map(organization => {
      return { params: { path: organization.path }, props: { organization, organizations } }
    })
    const eventsStaticPaths = events.map(event => {
      return { params: { path: event.path }, props: { event, events } }
    })
    const articlesStaticPaths = articles.map(article => {
      return { params: { path: article.path }, props: { article, articles } }
    })
    const listsStaticPaths = [
      { params: { path: 'fr/o' }, props: { organizations } },
      { params: { path: 'fr/e' }, props: { events } },
      { params: { path: 'fr/a' }, props: { articles } },
    ]

    staticPaths = [
      ...staticPaths,
      // ...pagesStaticPaths,
      ...organizationsStaticPaths,
      ...eventsStaticPaths,
      ...articlesStaticPaths,
      ...listsStaticPaths,
    ]
  })


  return staticPaths
}


const { path } = Astro.request.params;
const {
  // pages, page, 
  organization, organizations,
  event, events,
  article, articles,
  } = Astro.props;
---

<SkeletonLayout>
  <BasicPageLayout>
    <!-- {
      page && (
        <>
          <div>
            <header>
              <h1>
                <img src="http://localhost:8055/assets/c1b371bc-27ef-45ac-bd5f-bc78e66db22c" alt="Wanna Play" width="200" />
              </h1>
              <p class="h2">Connecte les joueurs</p>
              <p>Tu cherches une soirée jeux, un événement, un magasin, une ludothèque, un bar à jeux, un club, ...?
          Retrouve toute l'info liée au monde du jeu de société sur Wanna Play!</p>
            </header>
          </div>
          <ul>
            {page.main.map((slice) => {
              if(slice.collection === 'headers')
                return <li>{slice.item.code_name}</li>
              if(slice.collection === 'sections')
                return <li>{slice.collection}</li>
          
              return <li>{slice.collection}</li>
            })}
          </ul>
        </>
      )
    } -->

    {
      path === 'fr/o' && (
        <div>
          <h2>Organisations</h2>
          <ul>
            {
              organizations.map(o => (
                <li><a href={`/${o.path}`}>{o.name}</a></li>
              ))
            }
          </ul>
        </div>
      )
    }
    {
      path === 'fr/e' && (
        <div>
          <h2>Events</h2>
          <ul>
            {
              events.map(e => (
                <li><a href={`/${e.path}`}>{e.name}</a></li>
              ))
            }
          </ul>
        </div>
      )
    }
    {
      path === 'fr/a' && (
        <div>
          <h2>Articles</h2>
          <ul>
            {
              articles.map(a => (
                <li><a href={`/${a.path}`}>{a.path}</a></li>
              ))
            }
          </ul>
        </div>
      )
    }

    {
      organization && (
          <OrganizationPageLayout {organization} languages_code="fr" />
      )
    }


    {
      event && (
        <EventPageLayout {event} languages_code="fr" />
      )
    }

    {
      article && (
        <ArticlePageLayout {article} languages_code="fr" />
      )
    }
  </BasicPageLayout>
</SkeletonLayout>
