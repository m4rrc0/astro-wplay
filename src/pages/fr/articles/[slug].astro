---
import { Directus } from '@directus/sdk';

const DIRECTUS_EMAIL = import.meta.env.PUBLIC_DIRECTUS_EMAIL
const DIRECTUS_PW = import.meta.env.PUBLIC_DIRECTUS_PW



const directusConfig = {
    url: 'https://admin.wanna-play.be',
    project: 'wanna-play-admin',
    auth: {
        // Note: you should extract the login information
        // to environment variables.
        email: DIRECTUS_EMAIL,
        password: DIRECTUS_PW,
    },
    targetStatuses: ['published', 'draft', '__NONE__'],
    }

    // --------


const directus = new Directus(directusConfig.url);


// We don't need to authenticate if data is public
const articles = await directus.items('articles').readMany({ meta: 'total_count' });


console.log(articles)

// console.log({
//     items: publicData.data,
//     total: publicData.meta.total_count,
// });

    // ----------

// const response = await fetch('https://example.com/movies.json');
// const data = await response.json();
// Remember: Astro component scripts log to the CLI
// console.log(data);


export async function getStaticPaths() {
  return [
    { params: { slug: 'test' }, props: { /* optional */ } },
    // { params: { ... } },
    // { params: { ... } },
    // ...
  ];
}


const {slug} = Astro.request.params;
---
<p>Slugish: {slug}</p>

<div>{JSON.stringify(articles)}</div>
